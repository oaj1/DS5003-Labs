#Initialize the model using the RandomForestClassifier() type of classification tree. The model's parameters should be set as follows:
#n_estimators to 45
#max_features to at most the square root of the number of features (sqrt) considered for the best split
#criterion to the gini quality measure for splitting
#bootstrap to True to build trees with sample data
#random_state to rng

# Import packages and functions
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.tree import export_text  

# Seed random number generator
rng = np.random.RandomState(31)

# Load the dataset
birdOfPrey = pd.read_csv('birdOfPrey_Example.csv') 

# Assign outcome to y and features to X 
y = birdOfPrey['Age']
X = birdOfPrey.drop('Age', axis=1)

# Split dataset into training data and testing data
XTrain, XTest, yTrain, yTest = train_test_split(X, y, test_size=.3, random_state=rng)

# Initialize the model -- random forest classification trees
birdOfPreyRFC = RandomForestClassifier(n_estimators= 45, max_features='sqrt',criterion = 'gini',bootstrap = True, random_state= rng)

# Fit the model with training data
birdOfPreyRFC = birdOfPreyRFC.fit(XTrain, yTrain)

# Print first and last random trees generated in the forest
print('First tree:')
print(export_text(birdOfPreyRFC[0], feature_names=X.columns.to_list()))
print('Last tree:')
print(export_text(birdOfPreyRFC[45-1], feature_names=X.columns.to_list()))
