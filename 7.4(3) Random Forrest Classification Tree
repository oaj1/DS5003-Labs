#Initialize the model using the RandomForestClassifier() type of classification tree with:
#n_estimators to 68
#bootstrap to True
#random_state to rng
#Fit the model using the fit() method of the model with the correct training parameters.

# Import packages and functions
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.tree import export_text  

# Seed random number generator
rng = np.random.RandomState(48)

# Load the dataset
hawk = pd.read_csv('hawk_Example.csv') 

# Assign outcome to y and features to X 
y = hawk['Age']
X = hawk.drop('Age', axis=1)

# Split dataset into training data and testing data
XTrain, XTest, yTrain, yTest = train_test_split(X, y, test_size=0.4, random_state=rng)

# Your code goes here
# Initialize the model -- random forest classifier
hawkRFC = RandomForestClassifier(n_estimators = 68, bootstrap = True, random_state = rng) 

# Fit the model with training data
hawkRFC = hawkRFC.fit(XTrain,yTrain)

# Print first and last random trees generated in the forest
print('First tree:')
print(export_text(hawkRFC[0], feature_names=X.columns.to_list()))
print('Last tree:')
print(export_text(hawkRFC[68-1], feature_names=X.columns.to_list()))
